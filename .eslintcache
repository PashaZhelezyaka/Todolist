[{"D:\\it-kamasutra\\todolist-14\\src\\state\\store.ts":"1","D:\\it-kamasutra\\todolist-14\\src\\Todolist.tsx":"2","D:\\it-kamasutra\\todolist-14\\src\\App.tsx":"3","D:\\it-kamasutra\\todolist-14\\src\\state\\todolists-reducer.ts":"4","D:\\it-kamasutra\\todolist-14\\src\\state\\tasks-reducer.ts":"5","D:\\it-kamasutra\\todolist-14\\src\\index.tsx":"6","D:\\it-kamasutra\\todolist-14\\src\\api\\todolists-api.ts":"7","D:\\it-kamasutra\\todolist-14\\src\\AddItemForm.tsx":"8","D:\\it-kamasutra\\todolist-14\\src\\Task.tsx":"9","D:\\it-kamasutra\\todolist-14\\src\\EditableSpan.tsx":"10","D:\\it-kamasutra\\Todolist\\src\\index.tsx":"11","D:\\it-kamasutra\\Todolist\\src\\api\\todolists-api.ts":"12","D:\\it-kamasutra\\Todolist\\src\\trash\\reportWebVitals.ts":"13","D:\\it-kamasutra\\Todolist\\src\\app\\App.tsx":"14","D:\\it-kamasutra\\Todolist\\src\\components\\addItemForm\\AddItemForm.tsx":"15","D:\\it-kamasutra\\Todolist\\src\\components\\editableSpan\\EditableSpan.tsx":"16","D:\\it-kamasutra\\Todolist\\src\\app\\store.ts":"17","D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\tasks-reducer.ts":"18","D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\todolists-reducer.ts":"19","D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\TodolistsList.tsx":"20","D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\todolist\\Todolist.tsx":"21","D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\todolist\\task\\Task.tsx":"22","D:\\it-kamasutra\\Todolist\\src\\app\\app-reducer.ts":"23","D:\\it-kamasutra\\Todolist\\src\\components\\errorSnackbar\\ErrorSnackbar.tsx":"24","D:\\it-kamasutra\\Todolist\\src\\utils\\error-utils.ts":"25","D:\\it-kamasutra\\Todolist\\src\\features\\login\\Login.tsx":"26","D:\\it-kamasutra\\Todolist\\src\\features\\login\\auth-reducer.ts":"27"},{"size":967,"mtime":1620905947246,"results":"28","hashOfConfig":"29"},{"size":3721,"mtime":1620910635354,"results":"30","hashOfConfig":"29"},{"size":4731,"mtime":1621004649242,"results":"31","hashOfConfig":"29"},{"size":3655,"mtime":1620906139337,"results":"32","hashOfConfig":"29"},{"size":7531,"mtime":1621004573875,"results":"33","hashOfConfig":"29"},{"size":641,"mtime":1611424226000,"results":"34","hashOfConfig":"29"},{"size":2527,"mtime":1621003909173,"results":"35","hashOfConfig":"29"},{"size":1474,"mtime":1594727720000,"results":"36","hashOfConfig":"29"},{"size":1729,"mtime":1596076630000,"results":"37","hashOfConfig":"29"},{"size":952,"mtime":1594154724000,"results":"38","hashOfConfig":"29"},{"size":649,"mtime":1622921862777,"results":"39","hashOfConfig":"40"},{"size":3194,"mtime":1624361514896,"results":"41","hashOfConfig":"40"},{"size":425,"mtime":1607869388000,"results":"42","hashOfConfig":"40"},{"size":3369,"mtime":1624361514775,"results":"43","hashOfConfig":"40"},{"size":1652,"mtime":1624203874315,"results":"44","hashOfConfig":"40"},{"size":1110,"mtime":1624114600419,"results":"45","hashOfConfig":"40"},{"size":1625,"mtime":1624361514766,"results":"46","hashOfConfig":"40"},{"size":10506,"mtime":1624114600395,"results":"47","hashOfConfig":"40"},{"size":6344,"mtime":1624114600403,"results":"48","hashOfConfig":"40"},{"size":4531,"mtime":1624297267590,"results":"49","hashOfConfig":"40"},{"size":4084,"mtime":1624226678513,"results":"50","hashOfConfig":"40"},{"size":1949,"mtime":1624114600322,"results":"51","hashOfConfig":"40"},{"size":2232,"mtime":1624356173091,"results":"52","hashOfConfig":"40"},{"size":1084,"mtime":1623835101193,"results":"53","hashOfConfig":"40"},{"size":898,"mtime":1623859150600,"results":"54","hashOfConfig":"40"},{"size":3534,"mtime":1624361514985,"results":"55","hashOfConfig":"40"},{"size":2036,"mtime":1624361514786,"results":"56","hashOfConfig":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yolshx",{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"18d2x0k",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\it-kamasutra\\todolist-14\\src\\state\\store.ts",[],"D:\\it-kamasutra\\todolist-14\\src\\Todolist.tsx",["120","121","122","123","124","125"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from './AddItemForm'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task'\r\nimport {TaskStatuses, TaskType} from './api/todolists-api'\r\nimport {FilterValuesType} from './state/todolists-reducer'\r\nimport {fetchTasksTC} from \"./state/tasks-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasksTC(props.id))\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n\r\n    return <div>\r\n\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["126","127"],"D:\\it-kamasutra\\todolist-14\\src\\App.tsx",["128","129","130","131","132","133","134","135","136","137","138","139","140"],"D:\\it-kamasutra\\todolist-14\\src\\state\\todolists-reducer.ts",[],"D:\\it-kamasutra\\todolist-14\\src\\state\\tasks-reducer.ts",["141","142","143","144"],"D:\\it-kamasutra\\todolist-14\\src\\index.tsx",[],["145","146"],"D:\\it-kamasutra\\todolist-14\\src\\api\\todolists-api.ts",[],"D:\\it-kamasutra\\todolist-14\\src\\AddItemForm.tsx",["147","148","149"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n",["150","151"],"D:\\it-kamasutra\\todolist-14\\src\\Task.tsx",["152","153","154"],"D:\\it-kamasutra\\todolist-14\\src\\EditableSpan.tsx",[],"D:\\it-kamasutra\\Todolist\\src\\index.tsx",[],["155","156"],"D:\\it-kamasutra\\Todolist\\src\\api\\todolists-api.ts",[],"D:\\it-kamasutra\\Todolist\\src\\trash\\reportWebVitals.ts",[],"D:\\it-kamasutra\\Todolist\\src\\app\\App.tsx",["157","158"],"D:\\it-kamasutra\\Todolist\\src\\components\\addItemForm\\AddItemForm.tsx",[],"D:\\it-kamasutra\\Todolist\\src\\components\\editableSpan\\EditableSpan.tsx",[],"D:\\it-kamasutra\\Todolist\\src\\app\\store.ts",[],"D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\tasks-reducer.ts",[],"D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\todolists-reducer.ts",[],"D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\TodolistsList.tsx",["159","160","161","162","163","164","165","166"],"import React, {useCallback, useEffect} from \"react\";\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from \"./todolists-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {addTaskTC, changeTaskTitleTC, removeTaskTC, updateTaskStatusTC} from \"./tasks-reducer\";\r\nimport {TaskStatuses} from \"../../api/todolists-api\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {AddItemForm} from \"../../components/addItemForm/AddItemForm\";\r\nimport {Todolist} from \"./todolist/Todolist\";\r\nimport {TasksStateType} from \"../../app/App\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return\r\n        }\r\n        dispatch(fetchTodolistsTC())\r\n    }, [])\r\n\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        dispatch(removeTaskTC(id, todolistId))\r\n    }, []);\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        dispatch(addTaskTC(todolistId, title));\r\n    }, []);\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const action = updateTaskStatusTC(id, todolistId, status)\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        // const action = changeTaskTitleAC(id, newTitle, todolistId);\r\n        dispatch(changeTaskTitleTC(todolistId, id, newTitle));\r\n    }, []);\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        //const action = removeTodolistAC(id);\r\n        dispatch(removeTodolistTC(id));\r\n    }, []);\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        // const action = changeTodolistTitleAC(id, title);\r\n        dispatch(changeTodolistTitleTC(id, title));\r\n    }, []);\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        dispatch(addTodolistTC(title));\r\n    }, [dispatch]);\r\n\r\n    // если незареганы (false) переходит в логин, ставим редирект после всех хуков\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container style={{padding: \"20px\"}}>\r\n                <AddItemForm addItem={addTodolist}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                {\r\n                    todolists.map(tl => {\r\n                        let allTodolistTasks = tasks[tl.id];\r\n\r\n                        return <Grid item key={tl.id}>\r\n                            <Paper style={{padding: \"10px\"}}>\r\n                                <Todolist\r\n                                    id={tl.id}\r\n                                    title={tl.title}\r\n                                    entityStatus={tl.entityStatus}\r\n                                    tasks={allTodolistTasks}\r\n                                    removeTask={removeTask}\r\n                                    changeFilter={changeFilter}\r\n                                    addTask={addTask}\r\n                                    changeTaskStatus={changeStatus}\r\n                                    filter={tl.filter}\r\n                                    removeTodolist={removeTodolist}\r\n                                    changeTaskTitle={changeTaskTitle}\r\n                                    changeTodolistTitle={changeTodolistTitle}\r\n                                    demo={demo}\r\n                                />\r\n                            </Paper>\r\n                        </Grid>\r\n                    })\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}","D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\todolist\\Todolist.tsx",["167","168","169","170","171","172"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/addItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/editableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {fetchTasksTC} from \"../tasks-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        dispatch(fetchTasksTC(props.id))\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() =>\r\n        props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() =>\r\n        props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() =>\r\n        props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} entityStatus={props.entityStatus}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n// Types\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    entityStatus: RequestStatusType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n    demo?: boolean\r\n\r\n}\r\n\r\n","D:\\it-kamasutra\\Todolist\\src\\features\\todolists\\todolist\\task\\Task.tsx",["173","174","175"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/editableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId),\r\n        [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue\r\n            ? TaskStatuses.Completed\r\n            : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed\r\n        ? 'is-done'\r\n        : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}\r\n                      entityStatus={props.task.entityStatus}/>\r\n        <IconButton onClick={onClickHandler} disabled={props.task.entityStatus === 'loading'}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n\r\n\r\n// Types\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}","D:\\it-kamasutra\\Todolist\\src\\app\\app-reducer.ts",[],"D:\\it-kamasutra\\Todolist\\src\\components\\errorSnackbar\\ErrorSnackbar.tsx",[],"D:\\it-kamasutra\\Todolist\\src\\utils\\error-utils.ts",[],"D:\\it-kamasutra\\Todolist\\src\\features\\login\\Login.tsx",["176"],"D:\\it-kamasutra\\Todolist\\src\\features\\login\\auth-reducer.ts",[],{"ruleId":"177","severity":1,"message":"178","line":33,"column":8,"nodeType":"179","endLine":33,"endColumn":10,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":37,"column":8,"nodeType":"179","endLine":37,"endColumn":33,"suggestions":"182"},{"ruleId":"177","severity":1,"message":"181","line":44,"column":8,"nodeType":"179","endLine":44,"endColumn":45,"suggestions":"183"},{"ruleId":"177","severity":1,"message":"181","line":46,"column":86,"nodeType":"179","endLine":46,"endColumn":116,"suggestions":"184"},{"ruleId":"177","severity":1,"message":"181","line":47,"column":92,"nodeType":"179","endLine":47,"endColumn":122,"suggestions":"185"},{"ruleId":"177","severity":1,"message":"181","line":48,"column":98,"nodeType":"179","endLine":48,"endColumn":128,"suggestions":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":12,"column":23,"nodeType":"193","messageId":"194","endLine":12,"endColumn":37},{"ruleId":"191","severity":1,"message":"195","line":16,"column":5,"nodeType":"193","messageId":"194","endLine":16,"endColumn":14},{"ruleId":"191","severity":1,"message":"196","line":18,"column":5,"nodeType":"193","messageId":"194","endLine":18,"endColumn":23},{"ruleId":"191","severity":1,"message":"197","line":20,"column":5,"nodeType":"193","messageId":"194","endLine":20,"endColumn":17},{"ruleId":"191","severity":1,"message":"198","line":25,"column":33,"nodeType":"193","messageId":"194","endLine":25,"endColumn":45},{"ruleId":"177","severity":1,"message":"199","line":37,"column":8,"nodeType":"179","endLine":37,"endColumn":10,"suggestions":"200"},{"ruleId":"177","severity":1,"message":"201","line":45,"column":8,"nodeType":"179","endLine":45,"endColumn":10,"suggestions":"202"},{"ruleId":"177","severity":1,"message":"201","line":49,"column":8,"nodeType":"179","endLine":49,"endColumn":10,"suggestions":"203"},{"ruleId":"177","severity":1,"message":"201","line":54,"column":8,"nodeType":"179","endLine":54,"endColumn":10,"suggestions":"204"},{"ruleId":"177","severity":1,"message":"201","line":59,"column":8,"nodeType":"179","endLine":59,"endColumn":10,"suggestions":"205"},{"ruleId":"177","severity":1,"message":"201","line":64,"column":8,"nodeType":"179","endLine":64,"endColumn":10,"suggestions":"206"},{"ruleId":"177","severity":1,"message":"201","line":69,"column":8,"nodeType":"179","endLine":69,"endColumn":10,"suggestions":"207"},{"ruleId":"177","severity":1,"message":"201","line":74,"column":8,"nodeType":"179","endLine":74,"endColumn":10,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"209","line":2,"column":9,"nodeType":"193","messageId":"194","endLine":2,"endColumn":11},{"ruleId":"191","severity":1,"message":"210","line":5,"column":5,"nodeType":"193","messageId":"194","endLine":5,"endColumn":19},{"ruleId":"191","severity":1,"message":"211","line":9,"column":5,"nodeType":"193","messageId":"194","endLine":9,"endColumn":17},{"ruleId":"191","severity":1,"message":"212","line":10,"column":5,"nodeType":"193","messageId":"194","endLine":10,"endColumn":24},{"ruleId":"187","replacedBy":"213"},{"ruleId":"189","replacedBy":"214"},{"ruleId":"191","severity":1,"message":"215","line":2,"column":9,"nodeType":"193","messageId":"194","endLine":2,"endColumn":12},{"ruleId":"191","severity":1,"message":"216","line":2,"column":14,"nodeType":"193","messageId":"194","endLine":2,"endColumn":20},{"ruleId":"191","severity":1,"message":"217","line":2,"column":22,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"187","replacedBy":"218"},{"ruleId":"189","replacedBy":"219"},{"ruleId":"177","severity":1,"message":"181","line":15,"column":97,"nodeType":"179","endLine":15,"endColumn":130,"suggestions":"220"},{"ruleId":"177","severity":1,"message":"181","line":20,"column":8,"nodeType":"179","endLine":20,"endColumn":41,"suggestions":"221"},{"ruleId":"177","severity":1,"message":"181","line":24,"column":8,"nodeType":"179","endLine":24,"endColumn":41,"suggestions":"222"},{"ruleId":"187","replacedBy":"223"},{"ruleId":"189","replacedBy":"224"},{"ruleId":"191","severity":1,"message":"225","line":19,"column":11,"nodeType":"193","messageId":"194","endLine":19,"endColumn":16},{"ruleId":"177","severity":1,"message":"199","line":26,"column":8,"nodeType":"179","endLine":26,"endColumn":10,"suggestions":"226"},{"ruleId":"177","severity":1,"message":"227","line":27,"column":8,"nodeType":"179","endLine":27,"endColumn":10,"suggestions":"228"},{"ruleId":"177","severity":1,"message":"201","line":36,"column":8,"nodeType":"179","endLine":36,"endColumn":10,"suggestions":"229"},{"ruleId":"177","severity":1,"message":"201","line":40,"column":8,"nodeType":"179","endLine":40,"endColumn":10,"suggestions":"230"},{"ruleId":"177","severity":1,"message":"201","line":45,"column":8,"nodeType":"179","endLine":45,"endColumn":10,"suggestions":"231"},{"ruleId":"177","severity":1,"message":"201","line":50,"column":8,"nodeType":"179","endLine":50,"endColumn":10,"suggestions":"232"},{"ruleId":"177","severity":1,"message":"201","line":55,"column":8,"nodeType":"179","endLine":55,"endColumn":10,"suggestions":"233"},{"ruleId":"177","severity":1,"message":"201","line":60,"column":8,"nodeType":"179","endLine":60,"endColumn":10,"suggestions":"234"},{"ruleId":"177","severity":1,"message":"201","line":65,"column":8,"nodeType":"179","endLine":65,"endColumn":10,"suggestions":"235"},{"ruleId":"177","severity":1,"message":"236","line":23,"column":8,"nodeType":"179","endLine":23,"endColumn":10,"suggestions":"237"},{"ruleId":"177","severity":1,"message":"181","line":27,"column":8,"nodeType":"179","endLine":27,"endColumn":33,"suggestions":"238"},{"ruleId":"177","severity":1,"message":"181","line":34,"column":8,"nodeType":"179","endLine":34,"endColumn":45,"suggestions":"239"},{"ruleId":"177","severity":1,"message":"181","line":37,"column":46,"nodeType":"179","endLine":37,"endColumn":76,"suggestions":"240"},{"ruleId":"177","severity":1,"message":"181","line":39,"column":49,"nodeType":"179","endLine":39,"endColumn":79,"suggestions":"241"},{"ruleId":"177","severity":1,"message":"181","line":41,"column":52,"nodeType":"179","endLine":41,"endColumn":82,"suggestions":"242"},{"ruleId":"177","severity":1,"message":"181","line":9,"column":9,"nodeType":"179","endLine":9,"endColumn":42,"suggestions":"243"},{"ruleId":"177","severity":1,"message":"181","line":16,"column":8,"nodeType":"179","endLine":16,"endColumn":41,"suggestions":"244"},{"ruleId":"177","severity":1,"message":"181","line":20,"column":8,"nodeType":"179","endLine":20,"endColumn":41,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":51,"column":25,"nodeType":"248","messageId":"249","endLine":52,"endColumn":46,"fix":"250"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["251"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["252"],["253"],["254"],["255"],["256"],"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"@typescript-eslint/no-unused-vars","'setTodolistsAC' is defined but never used.","Identifier","unusedVar","'addTaskAC' is defined but never used.","'changeTaskStatusAC' is defined but never used.","'removeTaskAC' is defined but never used.","'todolistsAPI' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["259"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["260"],["261"],["262"],["263"],["264"],["265"],["266"],"'v1' is defined but never used.","'TaskPriorities' is defined but never used.","'TodolistType' is defined but never used.","'UpdateTaskModelType' is defined but never used.",["257"],["258"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.",["257"],["258"],["267"],["268"],["269"],["257"],["258"],"'error' is assigned a value but never used.",["270"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["271"],["272"],["273"],["274"],["275"],["276"],["277"],["278"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.id'. Either include them or remove the dependency array.",["279"],["280"],["281"],["282"],["283"],["284"],["285"],["286"],["287"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"288","text":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"292","fix":"295"},{"desc":"292","fix":"296"},{"desc":"292","fix":"297"},"no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"298","fix":"300"},{"desc":"298","fix":"301"},{"desc":"298","fix":"302"},{"desc":"298","fix":"303"},{"desc":"298","fix":"304"},{"desc":"298","fix":"305"},{"desc":"298","fix":"306"},{"desc":"292","fix":"307"},{"desc":"292","fix":"308"},{"desc":"292","fix":"309"},{"desc":"298","fix":"310"},{"desc":"311","fix":"312"},{"desc":"298","fix":"313"},{"desc":"298","fix":"314"},{"desc":"298","fix":"315"},{"desc":"298","fix":"316"},{"desc":"298","fix":"317"},{"desc":"298","fix":"318"},{"desc":"298","fix":"319"},{"desc":"320","fix":"321"},{"desc":"292","fix":"322"},{"desc":"292","fix":"323"},{"desc":"292","fix":"324"},{"desc":"292","fix":"325"},{"desc":"292","fix":"326"},{"desc":"292","fix":"327"},{"desc":"292","fix":"328"},{"desc":"292","fix":"329"},[1774,1774]," rel=\"noreferrer\"","Update the dependencies array to be: [dispatch, props.id]",{"range":"330","text":"331"},"Update the dependencies array to be: [props]",{"range":"332","text":"333"},{"range":"334","text":"333"},{"range":"335","text":"333"},{"range":"336","text":"333"},{"range":"337","text":"333"},"Update the dependencies array to be: [dispatch]",{"range":"338","text":"339"},{"range":"340","text":"339"},{"range":"341","text":"339"},{"range":"342","text":"339"},{"range":"343","text":"339"},{"range":"344","text":"339"},{"range":"345","text":"339"},{"range":"346","text":"339"},{"range":"347","text":"333"},{"range":"348","text":"333"},{"range":"349","text":"333"},{"range":"350","text":"339"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"351","text":"352"},{"range":"353","text":"339"},{"range":"354","text":"339"},{"range":"355","text":"339"},{"range":"356","text":"339"},{"range":"357","text":"339"},{"range":"358","text":"339"},{"range":"359","text":"339"},"Update the dependencies array to be: [demo, dispatch, props.id]",{"range":"360","text":"361"},{"range":"362","text":"333"},{"range":"363","text":"333"},{"range":"364","text":"333"},{"range":"365","text":"333"},{"range":"366","text":"333"},{"range":"367","text":"333"},{"range":"368","text":"333"},{"range":"369","text":"333"},[1254,1256],"[dispatch, props.id]",[1362,1387],"[props]",[1600,1637],[1727,1757],[1851,1881],[1981,2011],[1059,1061],"[dispatch]",[1433,1435],[1577,1579],[1791,1793],[2005,2007],[2209,2211],[2361,2363],[2545,2547],[721,754],[1027,1060],[1217,1250],[1484,1486],[990,992],"[demo, dispatch, isLoggedIn]",[1459,1461],[1603,1605],[1816,1818],[2070,2072],[2274,2276],[2442,2444],[2655,2657],[860,862],"[demo, dispatch, props.id]",[968,993],[1206,1243],[1342,1372],[1475,1505],[1614,1644],[470,503],[802,835],[992,1025]]